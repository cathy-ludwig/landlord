{"version":3,"sources":["ParcelTable.js","ParcelMap.js","columns.js","OutOfStateTableData.js","OutOfCityTableData.js","LowConditionTableData.js","MainAppBar.js","About.js","OutOfStateGroupedTableData.js","OutOfCityGroupedTableData.js","LowConditionGroupedTableData.js","PropertyDetail.js","MainRouter.js","App.js","serviceWorker.js","index.js"],"names":["queryString","require","ParcelTable","tableData","title","columns","parcels","onRowClick","search","useEffect","ReactGA","window","location","pathname","searchText","parse","data","options","pageSize","pageSizeOptions","emptyRowsWhenPaging","exportButton","actionsColumnIndex","localization","header","actions","ParcelMap","props","state","lat","long","zoom","position","this","classes","source","Box","className","container","breadcrumb","mb","Breadcrumbs","aria-label","separator","Typography","color","Link","href","map","Map","center","TileLayer","url","attribution","parcel","Marker","LAT_LONG","Popup","popupTitle","OWNER_NAME","popupContent","ADDRESS_LA","PROP_CITY","PROP_ZIP","PIN","target","rel","Component","withStyles","fontSize","fontWeight","display","flexDirection","height","flex","COLUMNS","field","width","hidden","ADDRESS2","OWNER_CITY","QUALITY","CONDITION","PROPERTY_COUNT","defaultSort","OWNER_STAT","VIOLATION_COUNT","outOfStateTableData","outOfStateParcels","event","rowData","assign","outOfCityTableData","outOfCityParcels","lowConditionTableData","lowConditionParcels","drawerWidth","useStyles","makeStyles","theme","root","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","nested","paddingLeft","toolbar","mixins","drawerPaper","contentWrapper","minHeight","main","margin","logo","maxWidth","footer","bottom","marginTop","backgroundColor","palette","primary","contrastText","footerBody","padding","textAlign","footerCopyright","dark","footerLink","MainAppBar","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","variant","Divider","List","component","ListItem","button","to","onClick","ListItemIcon","Home","ListItemText","LocationCity","disablePadding","dense","Place","TrendingDown","Info","CssBaseline","AppBar","Toolbar","IconButton","edge","src","alt","noWrap","Hidden","mdUp","implementation","Drawer","anchor","open","onClose","paper","ModalProps","keepMounted","smDown","children","justifyContent","m","p","icon","slackIcon","githubIcon","Date","getFullYear","About","Fragment","style","marginBottom","outOfNebraskaGroupedTableData","encodeURIComponent","OWNER","outOfCityGroupedTableData","lowConditionGroupedTableData","PropertyDetail","selectedProperty","setSelectedProperty","propertyCount","setPropertyCount","encodedPropertyAddress","setEncodedPropertyAddress","violationLinks","setViolationLinks","pin","useParams","pageview","parcelData","property","find","propJson","filter","length","VIOLATION_LINKS","Card","CardContent","gutterBottom","OWNER_ZIP","trim","link","MainRouter","basename","path","exact","Grid","item","xs","md","App","initialize","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sxonPAKMA,EAAcC,EAAQ,KAEb,SAASC,EAAT,GAAmC,IAAbC,EAAY,EAAZA,UAC5BC,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,QAASC,EAAuCH,EAAvCG,QAASC,EAA8BJ,EAA9BI,WADe,EACeJ,EAAlBK,cADG,SAG/CC,qBAAU,kBAAMC,IAAiBC,OAAOC,SAASC,YAAW,IAE5D,IAAMC,EAAad,EAAYe,MAAMJ,OAAOC,SAASJ,QAErD,OACI,cAAC,IAAD,CACIJ,MAAOA,EACPC,QAASA,EACTW,KAAMV,EACNW,QAAS,CACPC,SAAU,GACVC,gBAAiB,CAAC,GAAI,GAAI,KAC1BC,qBAAqB,EACrBC,cAAc,EACdb,OAAQA,EACRM,WAAYA,EAAWN,QAAU,GACjCc,oBAAqB,GAEvBf,WAAYA,EACZgB,aAAc,CACZC,OAAQ,CACNC,QAAS,W,wICAjBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,IAAK,QACLC,MAAO,QACPC,KAAM,IALS,E,qDAUjB,IAAMC,EAAW,CAACC,KAAKL,MAAMC,IAAKI,KAAKL,MAAME,MADtC,EAE4BG,KAAKN,MAAjCO,EAFA,EAEAA,QAAS5B,EAFT,EAESA,QAAS6B,EAFlB,EAEkBA,OACzB,OACI,eAACC,EAAA,EAAD,CAAKC,UAAWH,EAAQI,UAAxB,UACE,cAACF,EAAA,EAAD,CAAKC,UAAWH,EAAQK,WAAYC,GAAI,EAAxC,SACE,eAACC,EAAA,EAAD,CAAaC,aAAW,aAAaC,UAAU,SAA/C,UACE,cAACC,EAAA,EAAD,CAAYC,MAAM,cAAlB,SAAgC,cAACC,EAAA,EAAD,CAAMC,KAAI,oBAAeZ,GAAzB,SAAoCA,MACpE,cAACS,EAAA,EAAD,CAAYC,MAAM,cAAlB,+BAGJ,cAACT,EAAA,EAAD,CAAKC,UAAWH,EAAQc,IAAxB,SACE,eAACC,EAAA,EAAD,CAAKC,OAAQlB,EAAUD,KAAME,KAAKL,MAAMG,KAAxC,UACE,cAACoB,EAAA,EAAD,CACIC,IAAI,qDACJC,YAAY,2EAEhB,cAAC,IAAD,UACG/C,EAAQ0C,KAAI,SAAAM,GACX,OACI,cAACC,EAAA,EAAD,CAAQvB,SAAU,CAACsB,EAAOE,SAAS3B,IAAKyB,EAAOE,SAAS1B,MAAxD,SACE,eAAC2B,EAAA,EAAD,WACE,qBAAKpB,UAAWH,EAAQwB,WAAxB,SAAqCJ,EAAOK,aAC5C,qBAAKtB,UAAWH,EAAQ0B,aAAxB,SAAuCN,EAAOO,aAC9C,sBAAKxB,UAAWH,EAAQ0B,aAAxB,UAAuCN,EAAOQ,UAA9C,QAA8DR,EAAOS,YACrE,qBAAK1B,UAAWH,EAAQ0B,aAAxB,SAAsC,mBAAGb,KAAI,oBAAeZ,EAAf,YAAyBmB,EAAOU,KAAOC,OAAO,SAASC,IAAI,aAAlE,mCAL0BZ,EAAOU,sB,GA9BzEG,aAsDTC,cA3EA,CACbV,WAAY,CACVW,SAAU,GACVC,WAAY,QAEdV,aAAc,CACZS,SAAU,IAEZ/B,UAAW,CACTiC,QAAS,OACTC,cAAe,SACfC,OAAQ,QAEVlC,WAAY,CACVmC,KAAM,GAER1B,IAAK,CACH0B,KAAM,IA0DKN,CAAmB1C,G,SCrFrBiD,EAAU,CACrBX,IAAK,CAAC5D,MAAO,cAAewE,MAAO,MAAOC,MAAO,IAAKC,QAAQ,GAC9DhB,UAAW,CAAC1D,MAAO,gBAAiBwE,MAAO,YAAaC,MAAO,KAC/DlB,WAAY,CAACvD,MAAO,aAAcwE,MAAO,cACzCG,SAAU,CAAC3E,MAAO,gBAAiBwE,MAAO,YAC1CI,WAAY,CAAC5E,MAAO,aAAcwE,MAAO,cACzCf,WAAY,CAACzD,MAAO,mBAAoBwE,MAAO,cAC/CK,QAAS,CAAC7E,MAAO,mBAAoBwE,MAAO,UAAWC,MAAO,KAC9DK,UAAW,CAAC9E,MAAO,qBAAsBwE,MAAO,YAAaC,MAAO,KACpEM,eAAgB,CAAC/E,MAAO,uBAAwBwE,MAAO,iBAAkBQ,YAAa,QACtFC,WAAY,CAACjF,MAAO,cAAewE,MAAO,cAC1CU,gBAAiB,CAAClF,MAAO,QAASwE,MAAO,oBCR9BW,EAAsB,CACjCnF,MAAO,yBACPC,QAAS,CACPsE,EAAO,IACPA,EAAO,WACPA,EAAO,SACPA,EAAO,WACPA,EAAO,WACPA,EAAO,UACPA,EAAO,QACPA,EAAO,UACPA,EAAO,iBAETrE,QAASkF,EACThF,QAAQ,EACRD,WAAY,SAACkF,EAAOC,GAAR,OAAoB/E,OAAOC,SAAS+E,OAAhB,iCAAiDD,EAAQ1B,Q,SCf9E4B,EAAqB,CAChCxF,MAAO,yBACPC,QAAS,CACPsE,EAAO,IACPA,EAAO,WACPA,EAAO,SACPA,EAAO,WACPA,EAAO,WACPA,EAAO,UACPA,EAAO,QACPA,EAAO,UACPA,EAAO,iBAETrE,QAASuF,EACTrF,QAAQ,EACRD,WAAY,SAACkF,EAAOC,GAAR,OAAoB/E,OAAOC,SAAS+E,OAAhB,iCAAiDD,EAAQ1B,Q,SCf9E8B,EAAwB,CACnC1F,MAAO,2BACPC,QAAS,CACPsE,EAAO,IACPA,EAAO,WACPA,EAAO,SACPA,EAAO,WACPA,EAAO,WACPA,EAAO,WACPA,EAAO,UACPA,EAAO,QACPA,EAAO,UACPA,EAAO,iBAETrE,QAASyF,EACTvF,QAAQ,EACRD,WAAY,SAACkF,EAAOC,GAAR,OAAoB/E,OAAOC,SAAS+E,OAAhB,kCAAkDD,EAAQ1B,Q,gQCItFgC,GAAc,IAEdC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ7B,QAAS,QAEX8B,OAAO,eACJF,EAAMG,YAAYC,GAAG,MAAQ,CAC5B1B,MAAOmB,GACPQ,WAAY,IAGhBC,OAAO,eACJN,EAAMG,YAAYC,GAAG,MAAQ,CAC5B1B,MAAM,eAAD,OAAiBmB,GAAjB,OACLU,WAAYV,KAGhBW,WAAW,aACTC,YAAaT,EAAMU,QAAQ,IAC1BV,EAAMG,YAAYC,GAAG,MAAQ,CAC5BhC,QAAS,SAGbuC,OAAQ,CACNC,YAAaZ,EAAMU,QAAQ,IAG7BG,QAASb,EAAMc,OAAOD,QACtBE,YAAa,CACXrC,MAAOmB,IAETmB,eAAgB,CACd5C,QAAS,OACTC,cAAe,SACf4C,UAAW,QACXvC,MAAO,QAETwC,KAAM,CACJC,OAAQnB,EAAMU,QAAQ,GACtBpC,OAAQ,QAEV8C,KAAM,CACJC,SAAU,GACVZ,YAAa,IAEfa,OAAQ,CACNC,OAAQ,EACRC,UAAW,OACXC,gBAAiBzB,EAAM0B,QAAQC,QAAQT,KACvCxE,MAAOsD,EAAM0B,QAAQC,QAAQC,cAE/BC,WAAY,CACVC,QAAS9B,EAAMU,QAAQ,EAAG,GAC1BqB,UAAW,SACXN,gBAAiBzB,EAAM0B,QAAQC,QAAQT,KACvCxE,MAAOsD,EAAM0B,QAAQC,QAAQC,cAE/BI,gBAAiB,CACfT,OAAQ,EACRO,QAAS9B,EAAMU,QAAQ,EAAG,GAC1BqB,UAAW,SACXP,UAAW,OACXC,gBAAiBzB,EAAM0B,QAAQC,QAAQM,KACvCvF,MAAOsD,EAAM0B,QAAQC,QAAQC,cAE/BM,WAAY,CACVxF,MAAOsD,EAAM0B,QAAQC,QAAQC,kBAIlB,SAASO,GAAW3G,GACjC,IAAMO,EAAU+D,KADwB,EAEJsC,IAAMC,UAAS,GAFX,mBAEjCC,EAFiC,KAErBC,EAFqB,KAIlCC,EAAqB,SAACC,GAC1BF,EAA0B,cAAZE,IAA4BH,IAGtCpC,EAAS,SAACuC,GAAD,OACX,gCACE,qBAAKvG,UAAWH,EAAQ8E,UACxB,cAAC6B,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAMC,UAAU,MAAhB,UACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACF,UAAWjG,IAAMoG,GAAG,IAAIC,QAAS,kBAAMR,EAAmBC,IAA3E,UACE,cAACQ,EAAA,EAAD,UAAc,cAACC,GAAA,EAAD,MACd,cAACC,EAAA,EAAD,CAAcxB,QAAQ,WAFkE,KAK1F,eAACkB,EAAA,EAAD,CAAUC,QAAM,EAACF,UAAWjG,IAAMoG,GAAG,gBAAgBC,QAAS,kBAAMR,EAAmBC,IAAvF,UACE,cAACQ,EAAA,EAAD,UAAc,cAACG,GAAA,EAAD,MACd,cAACD,EAAA,EAAD,CAAcxB,QAAQ,mBAF8E,iBAItG,cAACgB,EAAA,EAAD,CAAMC,UAAU,MAAMS,gBAAc,EAACC,OAAK,EAA1C,SACE,eAACT,EAAA,EAAD,CAAU3G,UAAWH,EAAQ4E,OAAQmC,QAAM,EAACF,UAAWjG,IAAMoG,GAAG,oBAAoBC,QAAS,kBAAMR,EAAmBC,IAAtH,UACE,cAACQ,EAAA,EAAD,UAAc,cAACM,GAAA,EAAD,MACd,cAACJ,EAAA,EAAD,CAAcxB,QAAQ,uBAF6G,uBAMvI,eAACkB,EAAA,EAAD,CAAUC,QAAM,EAACF,UAAWjG,IAAMoG,GAAG,gBAAgBC,QAAS,kBAAMR,EAAmBC,IAAvF,UACE,cAACQ,EAAA,EAAD,UAAc,cAAC,KAAD,MACd,cAACE,EAAA,EAAD,CAAcxB,QAAQ,mBAF8E,iBAItG,cAACgB,EAAA,EAAD,CAAMC,UAAU,MAAMS,gBAAc,EAACC,OAAK,EAA1C,SACE,eAACT,EAAA,EAAD,CAAU3G,UAAWH,EAAQ4E,OAAQmC,QAAM,EAACF,UAAWjG,IAAMoG,GAAG,oBAAoBC,QAAS,kBAAMR,EAAmBC,IAAtH,UACE,cAACQ,EAAA,EAAD,UAAc,cAACM,GAAA,EAAD,MACd,cAACJ,EAAA,EAAD,CAAcxB,QAAQ,uBAF6G,uBAMvI,eAACkB,EAAA,EAAD,CAAUC,QAAM,EAACF,UAAWjG,IAAMoG,GAAG,iBAAiBC,QAAS,kBAAMR,EAAmBC,IAAxF,UACE,cAACQ,EAAA,EAAD,UAAc,cAACO,GAAA,EAAD,MACd,cAACL,EAAA,EAAD,CAAcxB,QAAQ,oBAF+E,kBAIvG,cAACgB,EAAA,EAAD,CAAMC,UAAU,MAAMS,gBAAc,EAACC,OAAK,EAA1C,SACE,eAACT,EAAA,EAAD,CAAU3G,UAAWH,EAAQ4E,OAAQmC,QAAM,EAACF,UAAWjG,IAAMoG,GAAG,qBAAqBC,QAAS,kBAAMR,EAAmBC,IAAvH,UACE,cAACQ,EAAA,EAAD,UAAc,cAACM,GAAA,EAAD,MACd,cAACJ,EAAA,EAAD,CAAcxB,QAAQ,wBAF8G,wBAMxI,eAACkB,EAAA,EAAD,CAAUC,QAAM,EAACF,UAAWjG,IAAMoG,GAAG,SAASC,QAAS,kBAAMR,EAAmBC,IAAhF,UACE,cAACQ,EAAA,EAAD,UAAc,cAACQ,GAAA,EAAD,MACd,cAACN,EAAA,EAAD,CAAcxB,QAAQ,YAFuE,iBAQvG,OACI,sBAAKzF,UAAWH,EAAQkE,KAAxB,UACE,cAACyD,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQ9H,SAAS,QAAQK,UAAWH,EAAQuE,OAA5C,SACE,eAACsD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACInH,MAAM,UACNH,aAAW,cACXuH,KAAK,QACLd,QAAS,kBAAMR,EAAmB,cAClCtG,UAAWH,EAAQyE,WALvB,SAOE,cAAC,IAAD,MAEF,qBAAKuD,IAAI,wBAAwBC,IAAI,OAAO9H,UAAWH,EAAQqF,KAAM1C,MAAO,GAAIJ,OAAQ,KACxF,cAAC7B,EAAA,EAAD,CAAYgG,QAAQ,KAAKwB,QAAM,EAA/B,qCAKJ,sBAAK/H,UAAWH,EAAQmE,OAAxB,UACE,cAACgE,GAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,MAA5B,SACE,cAACC,EAAA,EAAD,CACI5B,QAAQ,YACR6B,OAAO,OACPC,KAAMjC,EACNkC,QAAS,kBAAMhC,EAAmB,cAClCzG,QAAS,CACP0I,MAAO1I,EAAQgF,aAEjB2D,WAAY,CACVC,aAAa,GATnB,SAYGzE,EAAO,iBAGZ,cAACgE,GAAA,EAAD,CAAQU,QAAM,EAACR,eAAe,MAA9B,SACE,cAACC,EAAA,EAAD,CACItI,QAAS,CACP0I,MAAO1I,EAAQgF,aAEjB0B,QAAQ,YACR8B,MAAI,EALR,SAOGrE,EAAO,oBAId,sBAAKhE,UAAWH,EAAQiF,eAAxB,UACE,qBAAK9E,UAAWH,EAAQ8E,UACxB,sBAAM3E,UAAWH,EAAQmF,KAAzB,SACG1F,EAAMqJ,WAGT,yBAAQ3I,UAAWH,EAAQuF,OAA3B,UACE,sBAAKpF,UAAWH,EAAQ8F,WAAxB,UACE,cAACpF,EAAA,EAAD,CAAYgG,QAAQ,QAAQG,UAAU,IAAtC,4CACA,eAAC3G,EAAA,EAAD,CAAKmC,QAAQ,OAAO0G,eAAe,SAAnC,UACE,cAAC7I,EAAA,EAAD,CAAK8I,EAAG,EAAGC,EAAG,EAAd,SACE,mBAAG9I,UAAWH,EAAQmG,WAAYnE,IAAI,aAAaD,OAAO,SAASlB,KAAK,4CAAxE,SAAoH,cAAC,QAAD,CAAMqI,KAAMC,KAAWxG,MAAM,KAAKJ,OAAO,WAE/J,cAACrC,EAAA,EAAD,CAAK8I,EAAG,EAAGC,EAAG,EAAd,SACE,mBAAG9I,UAAWH,EAAQmG,WAAYnE,IAAI,aAAaD,OAAO,SAASlB,KAAK,2CAAxE,SAAmH,cAAC,QAAD,CAAMqI,KAAME,KAAYzG,MAAM,KAAKJ,OAAO,iBAInK,qBAAKpC,UAAWH,EAAQiG,gBAAxB,SACE,eAACvF,EAAA,EAAD,CAAYgG,QAAQ,QAApB,4BAEE,mBAAGvG,UAAWH,EAAQmG,WAAanE,IAAI,aAAaD,OAAO,SAASlB,KAAK,mCAAzE,+BAFF,YAGO,IAAIwI,MAAOC,6BC1NzB,SAASC,KAGZ,OAFAhL,qBAAU,kBAAMC,IAAiB,WAAU,IAEpC,eAAC,IAAMgL,SAAP,WACH,cAAC9I,EAAA,EAAD,CAAYgG,QAAS,KAArB,mBACA,cAACC,EAAA,EAAD,CAAS8C,MAAO,CAACC,aAAc,UAC/B,eAAChJ,EAAA,EAAD,kEACyD,IACrD,mBAAGG,KAAM,0DAA2DkB,OAAO,SAASC,IAAI,qBAAxF,sDACC,IAHL,mEAIK,IAAI,mBAAGnB,KAAM,0BAA2BkB,OAAO,SAASC,IAAI,qBAAxD,0CAJT,uJAQA,eAAC4E,EAAA,EAAD,WACI,eAACE,EAAA,EAAD,WACI,cAACpG,EAAA,EAAD,CAAY+I,MAAO,CAACrH,WAAY,KAAhC,+BADJ,sEAGA,eAAC0E,EAAA,EAAD,WACI,cAACpG,EAAA,EAAD,CAAY+I,MAAO,CAACrH,WAAY,KAAhC,+BADJ,wFAGA,eAAC0E,EAAA,EAAD,WACI,cAACpG,EAAA,EAAD,CAAY+I,MAAO,CAACrH,WAAY,KAAhC,gCADJ,gEAIJ,cAAC1B,EAAA,EAAD,8XAMA,eAACkG,EAAA,EAAD,WACI,eAACE,EAAA,EAAD,WACA,iDADA,4EAGA,eAACA,EAAA,EAAD,WACI,mDADJ,+CAKJ,cAACpG,EAAA,EAAD,IAGA,eAACA,EAAA,EAAD,gJAE6B,uBAAK,0BAElC,eAACA,EAAA,EAAD,8BACoB,sCADpB,qG,ICnDKiJ,GAAgC,CACzCzL,MAAO,mCACPC,QAAS,CACL,CAACD,MAAO,aAAcwE,MAAO,SAC7B,CAACxE,MAAO,aAAcwE,MAAO,iBAAkBQ,YAAa,OAAQP,MAAO,MAE/EvE,Q,OACAC,WAAY,SAACkF,EAAOC,GAAR,OAAoB/E,OAAOC,SAAS+E,OAAhB,wCAAwDmG,mBAAmBpG,EAAQqG,WCP1GC,GAA4B,CACrC5L,MAAO,mCACPC,QAAS,CACL,CAACD,MAAO,aAAcwE,MAAO,SAC7B,CAACxE,MAAO,aAAcwE,MAAO,iBAAkBQ,YAAa,OAAQP,MAAO,MAE/EvE,Q,OACAC,WAAY,SAACkF,EAAOC,GAAR,OAAoB/E,OAAOC,SAAS+E,OAAhB,wCAAwDmG,mBAAmBpG,EAAQqG,WCP1GE,GAA+B,CACxC7L,MAAO,2BACPC,QAAS,CACL,CAACD,MAAO,aAAcwE,MAAO,SAC7B,CAACxE,MAAO,aAAcwE,MAAO,iBAAkBQ,YAAa,OAAQP,MAAO,MAE/EvE,Q,OACAC,WAAY,SAACkF,EAAOC,GAAR,OAAoB/E,OAAOC,SAAS+E,OAAhB,yCAAyDmG,mBAAmBpG,EAAQqG,W,8BCEzG,SAASG,GAAevK,GAAQ,IAAD,EACI6G,mBAAS,CAACvD,QAAS,GAAIC,UAAW,KADtC,mBACrCiH,EADqC,KACnBC,EADmB,OAEF5D,mBAAS,GAFP,mBAErC6D,EAFqC,KAEtBC,EAFsB,OAGgB9D,mBAAS,IAHzB,mBAGrC+D,EAHqC,KAGbC,EAHa,OAIAhE,mBAAS,IAJT,mBAIrCiE,EAJqC,KAIrBC,EAJqB,KAMrCC,EAAOC,cAAPD,IAWP,OAVAlM,qBAAU,WACRC,IAAQmM,SAASlM,OAAOC,SAASC,UACjC,IAAMiM,EAAanL,EAAMrB,QACnByM,EAAWD,EAAWE,MAAK,SAAAC,GAAQ,OAAIA,EAASjJ,MAAQ2I,KAC9DP,EAAoBW,GACpBT,EAAiBQ,EAAWI,QAAO,SAAAD,GAAQ,OAAIA,EAAStJ,aAAeoJ,EAASpJ,cAAYwJ,QAC5FX,EAA0BV,mBAAmB,GAAD,OAAIiB,EAASlJ,WAAb,aAA4BkJ,EAASjJ,UAArC,gBAAsDiJ,EAAShJ,YAC3G2I,EAAkBK,EAASK,iBAAmB,MAC7C,CAACT,IAGA,qCACE,cAACvK,EAAA,EAAD,CAAKI,GAAI,EAAT,SACE,eAACC,EAAA,EAAD,CAAaC,aAAW,aAAaC,UAAU,SAA/C,UACE,cAACC,EAAA,EAAD,CAAYC,MAAM,cAAlB,SAAgC,cAACC,EAAA,EAAD,CAAMC,KAAI,oBAAepB,EAAMQ,QAA/B,SAA0CR,EAAMQ,WAChF,cAACS,EAAA,EAAD,CAAYC,MAAM,cAAlB,SAAiCsJ,EAAiBxI,kBAGtD,cAAC0J,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,eAAClL,EAAA,EAAD,CAAKI,GAAI,EAAT,UACE,cAACI,EAAA,EAAD,CAAYgG,QAAS,KAAM2E,cAAY,EAAvC,mBACA,cAAC3K,EAAA,EAAD,CAAYgG,QAAS,QAASG,UAAW,IAAzC,SAA+CoD,EAAiBxI,aAChE,cAACf,EAAA,EAAD,CAAYgG,QAAS,QAASG,UAAW,IAAzC,SAA+CoD,EAAiBpH,WAChE,eAACnC,EAAA,EAAD,CAAYgG,QAAS,QAASG,UAAW,IAAzC,UAA+CoD,EAAiBnH,WAAhE,KAA8EmH,EAAiB9G,WAA/F,IAA4G8G,EAAiBqB,aAC7H,cAAC5K,EAAA,EAAD,CAAYgG,QAAS,QAASG,UAAW,IAAKwE,cAAY,EAA1D,SAA2D,cAACzK,EAAA,EAAD,CAAMC,KAAI,oBAAepB,EAAMQ,OAArB,mBAAsC2J,mBAAmBK,EAAiBxI,aAApF,4BAAgH0I,EAAhH,sBAE7D,eAACjK,EAAA,EAAD,WACE,cAACQ,EAAA,EAAD,CAAYgG,QAAS,KAAM2E,cAAY,EAAvC,sBACA,cAAC3K,EAAA,EAAD,CAAYgG,QAAS,QAASG,UAAW,IAAzC,SAA+CoD,EAAiBtI,aAChE,eAACjB,EAAA,EAAD,CAAYgG,QAAS,QAASG,UAAW,IAAzC,UAA+CoD,EAAiBrI,UAAhE,QAAgFqI,EAAiBpI,YACjG,cAACnB,EAAA,EAAD,CAAYgG,QAAS,QAASG,UAAW,IAAKwE,cAAY,EAA1D,SAA2D,cAACzK,EAAA,EAAD,CAAMmB,OAAO,SAASC,IAAI,aAAanB,KAAI,oCAA+BwJ,GAA1E,2BAC3D,cAAC3J,EAAA,EAAD,CAAYgG,QAAS,KAAM2E,cAAY,EAAvC,+BACA,eAAC3K,EAAA,EAAD,CAAYgG,QAAS,QAASG,UAAW,IAAzC,wBAA0DoD,EAAiBjH,UAAUuI,QAAU,aAC/F,eAAC7K,EAAA,EAAD,CAAYgG,QAAS,QAASG,UAAW,IAAKwE,cAAY,EAA1D,sBAAqEpB,EAAiBlH,QAAQwI,QAAU,aACxG,cAAC7K,EAAA,EAAD,CAAYgG,QAAS,KAAM2E,cAAY,EAAvC,yBACCd,EAAeU,OAAS,GAAKV,EAAezJ,KAAI,SAAA0K,GAAI,OAAI,cAAC9K,EAAA,EAAD,CAAuBgG,QAAS,OAAQG,UAAW,IAAKwE,cAAY,EAApE,SAAqE,cAACzK,EAAA,EAAD,CAAMmB,OAAO,SAASC,IAAI,aAAanB,KAAI,UAAK2K,GAAhD,wBAApDA,MAC/C,IAA1BjB,EAAeU,QAAgB,cAACvK,EAAA,EAAD,CAAYgG,QAAS,QAASG,UAAW,IAAzC,iCCxC/B,SAAS4E,KACtB,OACI,cAAC,IAAD,CAAQC,SAAU,WAAlB,SACE,cAACtF,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuF,KAAK,oBAAZ,SACE,cAAC,EAAD,CAAW1L,OAAO,eAAe7B,QAASsF,EAAmBtF,YAE/D,cAAC,IAAD,CAAOuN,KAAK,qBAAZ,SACE,cAAC3B,GAAD,CAAgB/J,OAAO,eAAe7B,QAASsF,EAAmBtF,YAEpE,cAAC,IAAD,CAAOuN,KAAK,gBAAZ,SACE,cAAC3N,EAAD,CAAaC,UAAWyF,MAG1B,cAAC,IAAD,CAAOiI,KAAK,oBAAZ,SACE,cAAC,EAAD,CAAW1L,OAAO,eAAe7B,QAASiF,EAAoBjF,YAEhE,cAAC,IAAD,CAAOuN,KAAK,qBAAZ,SACE,cAAC3B,GAAD,CAAgB/J,OAAO,eAAe7B,QAASiF,EAAoBjF,YAErE,cAAC,IAAD,CAAOuN,KAAK,gBAAZ,SACE,cAAC3N,EAAD,CAAaC,UAAWoF,MAG1B,cAAC,IAAD,CAAOsI,KAAK,qBAAZ,SACE,cAAC,EAAD,CAAW1L,OAAO,gBAAgB7B,QAASwF,EAAsBxF,YAEnE,cAAC,IAAD,CAAOuN,KAAK,sBAAZ,SACE,cAAC3B,GAAD,CAAgB/J,OAAO,gBAAgB7B,QAASwF,EAAsBxF,YAExE,cAAC,IAAD,CAAOuN,KAAK,iBAAZ,SACE,cAAC3N,EAAD,CAAaC,UAAW2F,MAG1B,cAAC,IAAD,CAAOgI,OAAK,EAACD,KAAK,SAAlB,SACE,cAACpC,GAAD,MAGF,cAAC,IAAD,CAAOoC,KAAK,IAAIC,OAAK,EAArB,SACE,eAACC,GAAA,EAAD,CAAMzL,WAAS,EAACuE,QAAS,EAAzB,UACE,cAACkH,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAChO,EAAD,CAAaC,UAAW8L,OAE1B,cAAC8B,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAChO,EAAD,CAAaC,UAAW0L,OAE1B,cAACkC,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAChO,EAAD,CAAaC,UAAW6L,mBC9C3BmC,OAZf,WAKE,OAHE1N,qBAAU,WACNC,IAAQ0N,WAAW,qBAGvB,cAAC,IAAM1C,SAAP,UACE,cAACiC,GAAD,OCAcU,QACW,cAA7B1N,OAAOC,SAAS0N,UAEe,UAA7B3N,OAAOC,SAAS0N,UAEhB3N,OAAOC,SAAS0N,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.adce5fb0.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport MaterialTable from 'material-table';\nimport * as ReactGA from \"react-ga\";\n\nconst queryString = require('query-string');\n\nexport default function ParcelTable({tableData}) {\n  const {title, columns, parcels, onRowClick, search = false} = tableData;\n\n  useEffect(() => ReactGA.pageview(window.location.pathname), []);\n\n  const searchText = queryString.parse(window.location.search)\n\n  return (\n      <MaterialTable\n          title={title}\n          columns={columns}\n          data={parcels}\n          options={{\n            pageSize: 10,\n            pageSizeOptions: [10, 40, 100],\n            emptyRowsWhenPaging: false,\n            exportButton: true,\n            search: search,\n            searchText: searchText.search || '',\n            actionsColumnIndex: -1\n          }}\n          onRowClick={onRowClick}\n          localization={{\n            header: {\n              actions: 'View'\n            }\n          }}\n      />\n  );\n}\nParcelTable.propTypes = {\n  tableData: PropTypes.object,\n  search: PropTypes.bool,\n};\n","import React, {Component} from 'react'\nimport {Map, Marker, Popup, TileLayer} from 'react-leaflet';\nimport PropTypes from \"prop-types\";\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nconst styles = {\n  popupTitle: {\n    fontSize: 14,\n    fontWeight: \"bold\"\n  },\n  popupContent: {\n    fontSize: 12\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\"\n  },\n  breadcrumb: {\n    flex: 0\n  },\n  map: {\n    flex: 1\n  }\n};\n\nclass ParcelMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: 41.3148,\n      long: -96.1951,\n      zoom: 11\n    }\n  }\n\n  render() {\n    const position = [this.state.lat, this.state.long]\n    const {classes, parcels, source} = this.props;\n    return (\n        <Box className={classes.container}>\n          <Box className={classes.breadcrumb} mb={2}>\n            <Breadcrumbs aria-label=\"breadcrumb\" separator=\"›\">\n              <Typography color=\"textPrimary\"><Link href={`/landlord/${source}`}>{source}</Link></Typography>\n              <Typography color=\"textPrimary\">Property Map</Typography>\n            </Breadcrumbs>\n          </Box>\n          <Box className={classes.map}>\n            <Map center={position} zoom={this.state.zoom}>\n              <TileLayer\n                  url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n              />\n              <MarkerClusterGroup>\n                {parcels.map(parcel => {\n                  return (\n                      <Marker position={[parcel.LAT_LONG.lat, parcel.LAT_LONG.long]} key={parcel.PIN}>\n                        <Popup>\n                          <div className={classes.popupTitle}>{parcel.OWNER_NAME}</div>\n                          <div className={classes.popupContent}>{parcel.ADDRESS_LA}</div>\n                          <div className={classes.popupContent}>{parcel.PROP_CITY}, NE {parcel.PROP_ZIP}</div>\n                          <div className={classes.popupContent}><a href={`/landlord/${source}/${parcel.PIN}`} target=\"_blank\" rel=\"noreferrer\">Property Detail</a></div>\n                        </Popup>\n                      </Marker>\n                  )\n                })}\n              </MarkerClusterGroup>\n            </Map>\n          </Box>\n        </Box>\n    );\n  }\n}\n\nParcelMap.propTypes = {\n  classes: PropTypes.object.isRequired,\n  parcels: PropTypes.array.isRequired,\n  source: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(ParcelMap);\n","export const COLUMNS = {\n  PIN: {title: 'Property ID', field: 'PIN', width: 150, hidden: true},\n  PROP_CITY: {title: 'Property City', field: 'PROP_CITY', width: 150},\n  OWNER_NAME: {title: 'Owner Name', field: 'OWNER_NAME'},\n  ADDRESS2: {title: 'Owner Address', field: 'ADDRESS2'},\n  OWNER_CITY: {title: 'Owner City', field: 'OWNER_CITY'},\n  ADDRESS_LA: {title: 'Property Address', field: 'ADDRESS_LA'},\n  QUALITY: {title: 'Property Quality', field: 'QUALITY', width: 100},\n  CONDITION: {title: 'Property Condition', field: 'CONDITION', width: 100},\n  PROPERTY_COUNT: {title: 'Number of Properties', field: 'PROPERTY_COUNT', defaultSort: 'desc'},\n  OWNER_STAT: {title: 'Owner State', field: 'OWNER_STAT'},\n  VIOLATION_COUNT: {title: 'Cases', field: 'VIOLATION_COUNT'}\n}\n","import outOfStateParcels from \"./data/ownerOutOfNebraskaParcels.json\";\nimport {COLUMNS} from \"./columns\";\n\nexport const outOfStateTableData = {\n  title: \"Out of State Landlords\",\n  columns: [\n    COLUMNS[\"PIN\"],\n    COLUMNS[\"OWNER_NAME\"],\n    COLUMNS[\"ADDRESS2\"],\n    COLUMNS[\"OWNER_STAT\"],\n    COLUMNS[\"ADDRESS_LA\"],\n    COLUMNS[\"PROP_CITY\"],\n    COLUMNS[\"QUALITY\"],\n    COLUMNS[\"CONDITION\"],\n    COLUMNS[\"VIOLATION_COUNT\"],\n  ],\n  parcels: outOfStateParcels,\n  search: true,\n  onRowClick: (event, rowData) => window.location.assign(`/landlord/out-of-state/${rowData.PIN}`)\n}\n","import outOfCityParcels from \"./data/ownerInNebraskaOutOfOmahaParcels.json\";\nimport {COLUMNS} from \"./columns\";\n\nexport const outOfCityTableData = {\n  title: \"Out of Omaha Landlords\",\n  columns: [\n    COLUMNS[\"PIN\"],\n    COLUMNS[\"OWNER_NAME\"],\n    COLUMNS[\"ADDRESS2\"],\n    COLUMNS[\"OWNER_CITY\"],\n    COLUMNS[\"ADDRESS_LA\"],\n    COLUMNS[\"PROP_CITY\"],\n    COLUMNS[\"QUALITY\"],\n    COLUMNS[\"CONDITION\"],\n    COLUMNS[\"VIOLATION_COUNT\"],\n  ],\n  parcels: outOfCityParcels,\n  search: true,\n  onRowClick: (event, rowData) => window.location.assign(`/landlord/out-of-omaha/${rowData.PIN}`)\n}\n","import lowConditionParcels from \"./data/lowPoorWornOutConditionParcels.json\";\nimport {COLUMNS} from \"./columns\";\n\nexport const lowConditionTableData = {\n  title: \"Low Condition Properties\",\n  columns: [\n    COLUMNS[\"PIN\"],\n    COLUMNS[\"OWNER_NAME\"],\n    COLUMNS[\"ADDRESS2\"],\n    COLUMNS[\"OWNER_CITY\"],\n    COLUMNS[\"OWNER_STAT\"],\n    COLUMNS[\"ADDRESS_LA\"],\n    COLUMNS[\"PROP_CITY\"],\n    COLUMNS[\"QUALITY\"],\n    COLUMNS[\"CONDITION\"],\n    COLUMNS[\"VIOLATION_COUNT\"],\n  ],\n  parcels: lowConditionParcels,\n  search: true,\n  onRowClick: (event, rowData) => window.location.assign(`/landlord/low-condition/${rowData.PIN}`)\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Box from \"@material-ui/core/Box\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Hidden from '@material-ui/core/Hidden';\nimport {Link} from \"react-router-dom\";\nimport {Home, Info, LocationCity, Map, Place, TrendingDown} from \"@material-ui/icons\";\nimport {Icon} from '@iconify/react';\nimport slackIcon from '@iconify/icons-mdi/slack';\nimport githubIcon from '@iconify/icons-mdi/github';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  drawer: {\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  contentWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n    width: \"100%\"\n  },\n  main: {\n    margin: theme.spacing(2),\n    height: \"100%\"\n  },\n  logo: {\n    maxWidth: 30,\n    marginRight: 10\n  },\n  footer: {\n    bottom: 0,\n    marginTop: \"auto\",\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  footerBody: {\n    padding: theme.spacing(2, 2),\n    textAlign: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  footerCopyright: {\n    bottom: 0,\n    padding: theme.spacing(1, 0),\n    textAlign: \"center\",\n    marginTop: \"auto\",\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.contrastText\n  },\n  footerLink: {\n    color: theme.palette.primary.contrastText\n  }\n}));\n\nexport default function MainAppBar(props) {\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = (variant) => {\n    setMobileOpen(variant === \"temporary\" && !mobileOpen);\n  };\n\n  const drawer = (variant) => (\n      <div>\n        <div className={classes.toolbar}/>\n        <Divider/>\n        <List component=\"nav\">\n          <ListItem button component={Link} to=\"/\" onClick={() => handleDrawerToggle(variant)} key={\"/\"}>\n            <ListItemIcon><Home/></ListItemIcon>\n            <ListItemText primary=\"Home\"/>\n          </ListItem>\n\n          <ListItem button component={Link} to=\"/out-of-omaha\" onClick={() => handleDrawerToggle(variant)} key={\"/out-of-omaha\"}>\n            <ListItemIcon><LocationCity/></ListItemIcon>\n            <ListItemText primary=\"Out of Omaha\"/>\n          </ListItem>\n          <List component=\"div\" disablePadding dense>\n            <ListItem className={classes.nested} button component={Link} to=\"/out-of-omaha/map\" onClick={() => handleDrawerToggle(variant)} key={\"/out-of-omaha/map\"}>\n              <ListItemIcon><Place/></ListItemIcon>\n              <ListItemText primary=\"Out of Omaha Map\"/>\n            </ListItem>\n          </List>\n\n          <ListItem button component={Link} to=\"/out-of-state\" onClick={() => handleDrawerToggle(variant)} key={\"/out-of-state\"}>\n            <ListItemIcon><Map/></ListItemIcon>\n            <ListItemText primary=\"Out of State\"/>\n          </ListItem>\n          <List component=\"div\" disablePadding dense>\n            <ListItem className={classes.nested} button component={Link} to=\"/out-of-state/map\" onClick={() => handleDrawerToggle(variant)} key={\"/out-of-state/map\"}>\n              <ListItemIcon><Place/></ListItemIcon>\n              <ListItemText primary=\"Out of State Map\"/>\n            </ListItem>\n          </List>\n\n          <ListItem button component={Link} to=\"/low-condition\" onClick={() => handleDrawerToggle(variant)} key={\"/low-condition\"}>\n            <ListItemIcon><TrendingDown/></ListItemIcon>\n            <ListItemText primary=\"Low Condition\"/>\n          </ListItem>\n          <List component=\"div\" disablePadding dense>\n            <ListItem className={classes.nested} button component={Link} to=\"/low-condition/map\" onClick={() => handleDrawerToggle(variant)} key={\"/low-condition/map\"}>\n              <ListItemIcon><Place/></ListItemIcon>\n              <ListItemText primary=\"Low Condition Map\"/>\n            </ListItem>\n          </List>\n\n          <ListItem button component={Link} to=\"/about\" onClick={() => handleDrawerToggle(variant)} key={\"/about\"}>\n            <ListItemIcon><Info/></ListItemIcon>\n            <ListItemText primary=\"About\"/>\n          </ListItem>\n        </List>\n      </div>\n  );\n\n  return (\n      <div className={classes.root}>\n        <CssBaseline/>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"start\"\n                onClick={() => handleDrawerToggle(\"temporary\")}\n                className={classes.menuButton}\n            >\n              <MenuIcon/>\n            </IconButton>\n            <img src=\"/landlord/favicon.png\" alt=\"logo\" className={classes.logo} width={30} height={30}/>\n            <Typography variant=\"h6\" noWrap>\n              Landlords of Omaha\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer}>\n          <Hidden mdUp implementation=\"css\">\n            <Drawer\n                variant=\"temporary\"\n                anchor=\"left\"\n                open={mobileOpen}\n                onClose={() => handleDrawerToggle(\"temporary\")}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                }}\n            >\n              {drawer(\"temporary\")}\n            </Drawer>\n          </Hidden>\n          <Hidden smDown implementation=\"css\">\n            <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n            >\n              {drawer(\"permanent\")}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <div className={classes.contentWrapper}>\n          <div className={classes.toolbar}/>\n          <main className={classes.main}>\n            {props.children}\n          </main>\n\n          <footer className={classes.footer}>\n            <div className={classes.footerBody}>\n              <Typography variant=\"body2\" component=\"p\">Learn more about this project:</Typography>\n              <Box display=\"flex\" justifyContent=\"center\">\n                <Box m={1} p={1}>\n                  <a className={classes.footerLink} rel=\"noreferrer\" target=\"_blank\" href=\"https://openne.slack.com/messages/housing\"><Icon icon={slackIcon} width=\"36\" height=\"36\"/></a>\n                </Box>\n                <Box m={1} p={1}>\n                  <a className={classes.footerLink} rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/opennebraska/landlord\"><Icon icon={githubIcon} width=\"36\" height=\"36\"/></a>\n                </Box>\n              </Box>\n            </div>\n            <div className={classes.footerCopyright}>\n              <Typography variant=\"body2\">\n                {`Copyright © `}\n                <a className={classes.footerLink}  rel=\"noreferrer\" target=\"_blank\" href=\"https://www.codefornebraska.org/\">Code for Nebraska</a>\n                {` ${new Date().getFullYear()}`}\n              </Typography>\n            </div>\n          </footer>\n        </div>\n      </div>\n  );\n}\n\nMainAppBar.propTypes = {\n  children: PropTypes.node\n}\n","import React, {useEffect} from \"react\";\nimport {Divider, Typography} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport * as ReactGA from \"react-ga\";\n\nexport function About() {\n    useEffect(() => ReactGA.pageview('About'), []);\n\n    return <React.Fragment>\n        <Typography variant={'h2'}>About</Typography>\n        <Divider style={{marginBottom: '15px'}}/>\n        <Typography>\n            Landlords of Omaha displays searchable data from the{' '}\n            <a href={\"https://data-dogis.opendata.arcgis.com/datasets/parcels\"} target=\"_blank\" rel=\"nopener noreferrer\">Omaha/Douglas County GIS parcels dataset</a>\n            {' '}and was created by volunteers from Open/Nebraska with input from\n            {' '}<a href={\"https://www.prineb.org/\"} target=\"_blank\" rel=\"nopener noreferrer\">Policy Research & Innovation</a>.\n            There are three options for what you see on this website, which you can see by clicking on the three\n            little bars in the upper left hand corner.\n        </Typography>\n        <List>\n            <ListItem>\n                <Typography style={{fontWeight: 600}}>Out of Omaha:&nbsp;</Typography>Properties owned by people or companies located outside of Omaha\n            </ListItem>\n            <ListItem>\n                <Typography style={{fontWeight: 600}}>Out of State:&nbsp;</Typography>Omaha properties that are owned by people or companies located outside of Nebraska\n            </ListItem>\n            <ListItem>\n                <Typography style={{fontWeight: 600}}>Low Condition:&nbsp;</Typography>Omaha properties that are in Poor to Worn Out condition\n            </ListItem>\n        </List>\n        <Typography>\n            The table data is searchable. If you want to view only owners located in\n            Omaha, simply enter omaha in the Search box by the upper right hand corner.\n            Any column can be sorted up or down. You may sort by Owner Name or Owner Address or Owner City, etc. You\n            can even do this after you have created a view of, say - Owner City as Omaha – as in the previous paragraph.\n        </Typography>\n        <List>\n            <ListItem>\n            <b>Property Quality</b> &nbsp;refers to the durability of the building when it was constructed.\n            </ListItem>\n            <ListItem>\n                <b>Property Condition</b>&nbsp;\n                means just what you would expect.\n            </ListItem>\n        </List>\n        <Typography>\n\n        </Typography>\n        <Typography>\n            Properties which do not display Property Quality or Property Condition are generally empty lots, parking\n            lots, tennis courts, etc.<br/><br/>\n        </Typography>\n        <Typography>\n            When sorting by <b>STATE</b> (owner state of residence), the abbreviation AE stands for U.S. Armed Forces –\n            Europe.\n        </Typography>\n    </React.Fragment>\n}\n","import outOfNebraskaGroupedData from \"./data/ownerOutOfNebraskaGrouping.json\";\n\nexport const outOfNebraskaGroupedTableData = {\n    title: \"Out of State Landlord Properties\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER'},\n        {title: 'Properties', field: 'PROPERTY_COUNT', defaultSort: 'desc', width: 100},\n    ],\n    parcels: outOfNebraskaGroupedData,\n    onRowClick: (event, rowData) => window.location.assign(`/landlord/out-of-state?search=${encodeURIComponent(rowData.OWNER)}`)\n}\n","import outOfCityGroupedData from \"./data/ownerInNebraskaOutOfOmahaGrouping.json\";\n\nexport const outOfCityGroupedTableData = {\n    title: \"Out of Omaha Landlord Properties\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER'},\n        {title: 'Properties', field: 'PROPERTY_COUNT', defaultSort: 'desc', width: 100},\n    ],\n    parcels: outOfCityGroupedData,\n    onRowClick: (event, rowData) => window.location.assign(`/landlord/out-of-omaha?search=${encodeURIComponent(rowData.OWNER)}`)\n}\n","import lowConditionGroupedData from './data/lowPoorWornOutConditionGrouping.json'\n\nexport const lowConditionGroupedTableData = {\n    title: \"Low Condition Properties\",\n    columns: [\n        {title: 'Owner Name', field: 'OWNER'},\n        {title: 'Properties', field: 'PROPERTY_COUNT', defaultSort: 'desc', width: 100},\n    ],\n    parcels: lowConditionGroupedData,\n    onRowClick: (event, rowData) => window.location.assign(`/landlord/low-condition?search=${encodeURIComponent(rowData.OWNER)}`)\n}\n","import React, {useEffect, useState} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport ReactGA from \"react-ga\";\nimport PropTypes from \"prop-types\";\n\nexport default function PropertyDetail(props) {\n  const [selectedProperty, setSelectedProperty] = useState({QUALITY: \"\", CONDITION: \"\"});\n  const [propertyCount, setPropertyCount] = useState(0);\n  const [encodedPropertyAddress, setEncodedPropertyAddress] = useState(\"\");\n  const [violationLinks, setViolationLinks] = useState([]);\n\n  const {pin} = useParams();\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname);\n    const parcelData = props.parcels;\n    const property = parcelData.find(propJson => propJson.PIN === pin);\n    setSelectedProperty(property);\n    setPropertyCount(parcelData.filter(propJson => propJson.OWNER_NAME === property.OWNER_NAME).length);\n    setEncodedPropertyAddress(encodeURIComponent(`${property.ADDRESS_LA}, ${property.PROP_CITY}, NE ${property.PROP_ZIP}`));\n    setViolationLinks(property.VIOLATION_LINKS || []);\n  }, [pin]);\n\n  return (\n      <>\n        <Box mb={2}>\n          <Breadcrumbs aria-label=\"breadcrumb\" separator=\"›\">\n            <Typography color=\"textPrimary\"><Link href={`/landlord/${props.source}`}>{props.source}</Link></Typography>\n            <Typography color=\"textPrimary\">{selectedProperty.OWNER_NAME}</Typography>\n          </Breadcrumbs>\n        </Box>\n        <Card>\n          <CardContent>\n            <Box mb={2}>\n              <Typography variant={\"h4\"} gutterBottom>Owner</Typography>\n              <Typography variant={\"body1\"} component={\"p\"}>{selectedProperty.OWNER_NAME}</Typography>\n              <Typography variant={\"body1\"} component={\"p\"}>{selectedProperty.ADDRESS2}</Typography>\n              <Typography variant={\"body1\"} component={\"p\"}>{selectedProperty.OWNER_CITY}, {selectedProperty.OWNER_STAT} {selectedProperty.OWNER_ZIP}</Typography>\n              <Typography variant={\"body1\"} component={\"p\"} gutterBottom><Link href={`/landlord/${props.source}?search=${encodeURIComponent(selectedProperty.OWNER_NAME)}`}>{`View All ${propertyCount} Properties`}</Link></Typography>\n            </Box>\n            <Box>\n              <Typography variant={\"h4\"} gutterBottom>Property</Typography>\n              <Typography variant={\"body1\"} component={\"p\"}>{selectedProperty.ADDRESS_LA}</Typography>\n              <Typography variant={\"body1\"} component={\"p\"}>{selectedProperty.PROP_CITY}, NE {selectedProperty.PROP_ZIP}</Typography>\n              <Typography variant={\"body1\"} component={\"p\"} gutterBottom><Link target=\"_blank\" rel=\"noreferrer\" href={`http://maps.google.com/?q=${encodedPropertyAddress}`}>View On Map</Link></Typography>\n              <Typography variant={\"h6\"} gutterBottom>Condition/Quality</Typography>\n              <Typography variant={\"body1\"} component={\"p\"}>Condition: {selectedProperty.CONDITION.trim() || \"Unknown\"}</Typography>\n              <Typography variant={\"body1\"} component={\"p\"} gutterBottom>Quality: {selectedProperty.QUALITY.trim() || \"Unknown\"}</Typography>\n              <Typography variant={\"h6\"} gutterBottom>Case Links:</Typography>\n              {violationLinks.length > 0 && violationLinks.map(link => <Typography key={link} variant={\"body\"} component={\"p\"} gutterBottom><Link target=\"_blank\" rel=\"noreferrer\" href={`${link}`}>View Case</Link></Typography>)}\n              {violationLinks.length === 0 && <Typography variant={\"body1\"} component={\"p\"}>No Cases</Typography>}\n            </Box>\n          </CardContent>\n        </Card>\n      </>\n  );\n}\n\nPropertyDetail.propTypes = {\n  parcels: PropTypes.array.isRequired,\n  source: PropTypes.string.isRequired,\n};\n","import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport ParcelTable from \"./ParcelTable\";\nimport ParcelMap from \"./ParcelMap\";\nimport React from \"react\";\nimport {outOfStateTableData} from \"./OutOfStateTableData\"\nimport {outOfCityTableData} from \"./OutOfCityTableData\";\nimport {lowConditionTableData} from \"./LowConditionTableData\";\nimport MainAppBar from \"./MainAppBar\";\nimport {About} from \"./About\";\nimport {outOfNebraskaGroupedTableData} from \"./OutOfStateGroupedTableData\";\nimport {outOfCityGroupedTableData} from \"./OutOfCityGroupedTableData\";\nimport {lowConditionGroupedTableData} from \"./LowConditionGroupedTableData\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropertyDetail from \"./PropertyDetail\";\n\nexport default function MainRouter() {\n  return (\n      <Router basename={\"landlord\"}>\n        <MainAppBar>\n          <Switch>\n            <Route path=\"/out-of-omaha/map\">\n              <ParcelMap source=\"out-of-omaha\" parcels={outOfCityTableData.parcels}/>\n            </Route>\n            <Route path=\"/out-of-omaha/:pin\">\n              <PropertyDetail source=\"out-of-omaha\" parcels={outOfCityTableData.parcels}/>\n            </Route>\n            <Route path=\"/out-of-omaha\">\n              <ParcelTable tableData={outOfCityTableData}/>\n            </Route>\n\n            <Route path=\"/out-of-state/map\">\n              <ParcelMap source=\"out-of-state\" parcels={outOfStateTableData.parcels}/>\n            </Route>\n            <Route path=\"/out-of-state/:pin\">\n              <PropertyDetail source=\"out-of-state\" parcels={outOfStateTableData.parcels}/>\n            </Route>\n            <Route path=\"/out-of-state\">\n              <ParcelTable tableData={outOfStateTableData}/>\n            </Route>\n\n            <Route path=\"/low-condition/map\">\n              <ParcelMap source=\"low-condition\" parcels={lowConditionTableData.parcels}/>\n            </Route>\n            <Route path=\"/low-condition/:pin\">\n              <PropertyDetail source=\"low-condition\" parcels={lowConditionTableData.parcels}/>\n            </Route>\n            <Route path=\"/low-condition\">\n              <ParcelTable tableData={lowConditionTableData}/>\n            </Route>\n\n            <Route exact path=\"/about\">\n              <About/>\n            </Route>\n\n            <Route path=\"/\" exact>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={4}>\n                  <ParcelTable tableData={lowConditionGroupedTableData}/>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <ParcelTable tableData={outOfNebraskaGroupedTableData}/>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <ParcelTable tableData={outOfCityGroupedTableData}/>\n                </Grid>\n              </Grid>\n            </Route>\n          </Switch>\n        </MainAppBar>\n      </Router>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport ReactGA from 'react-ga';\nimport \"./App.css\";\nimport MainRouter from \"./MainRouter\";\n\nfunction App() {\n\n    useEffect(() => {\n        ReactGA.initialize('UA-175185008-1');\n    })\n  return (\n    <React.Fragment>\n      <MainRouter />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}